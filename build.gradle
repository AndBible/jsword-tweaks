apply plugin: "java"

ext {
    jsword_project = System.env.JSWORD_PATH ?: "../../jsword"
    jsword_src = "${jsword_project}/src/main/java"
    jsword_resources = "${jsword_project}/src/main/resources"
    tweaks_jsword_src = "tweaks-src/java"
    tweaks_jsword_resources = "tweaks-src/resources"
    tweaks_util_src = "src/util/java"
    build_src = "src/jsword/java"
    build_resources = "src/jsword/resources"
    distribution = "distribution"
    target_dir = System.env.TARGET_DIR ?: "../and-bible/app/libs"
    jswordtweaks_home = "$rootDir"
}

allprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

task clean_project {
    outputs.upToDateWhen { false }
    doFirst {
        delete(build_src, build_resources, distribution)
    }
}

task init() {
    outputs.upToDateWhen { false }
    doFirst {
        mkdir build_src
        mkdir build_resources
        mkdir distribution
    }
}

task mergeResources(type: Copy, dependsOn: init) {
    outputs.upToDateWhen { false }

    from(jsword_resources) {
        exclude("org/crosswire/jsword/versification/**")
    }
    from(jsword_resources) {
        include("org/crosswire/jsword/versification/**")
        filter({String line -> if (line.contains('!zerosUnmapped')) '#!zerosUnmapped // commented out' else line})
    }
    // switch the Chinese localisation defaults around so default CN is simplified and TW is Traditional
    from(jsword_resources) {
        include("BibleNames_zh*.properties")
        rename("BibleNames_zh.properties", "BibleNames_zh_TW.properties")
        rename("BibleNames_zh_CN.properties", "BibleNames_zh.properties")
    }
    from(tweaks_jsword_resources) {
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }

    into build_resources
}


task mergeCode(type: Copy, dependsOn: init) {
    outputs.upToDateWhen { false }
    from(jsword_src) {
        exclude("org/crosswire/jsword/book/install/sword/FTPExample.java")
        exclude("org/crosswire/jsword/examples/Bench.java")
    }
    from(tweaks_jsword_src){
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
    into build_src
}


sourceSets {
    main {
        java {
            srcDir 'src/jsword/java'
        }
        resources {
            srcDir 'src/jsword/resources'
        }
        output.resourcesDir = "build/classes/main"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    outputs.upToDateWhen { false }
    classifier = 'sources'
    from sourceSets.main.allSource
}

clean.dependsOn clean_project, init
compileJava.dependsOn mergeResources, mergeCode
build.dependsOn sourcesJar, compileJava, jar

task installSources(type: Copy, dependsOn: build) {
    from("build/libs/jsword-tweaks-sources.jar") {
        rename("jsword-tweaks-sources.jar", "jsword-src.jar")
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
    into target_dir
}

task install(type: Copy, dependsOn: [build, installSources]) {
    from("build/libs") {
        rename("${project.name}.jar", "jsword.jar")
        rename("${project.name}-sources.jar", "jsword-src.jar")
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
    into target_dir
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.apache.httpcomponents:httpclient:4.3.5"
    implementation "org.apache.commons:commons-compress:1.12"
    implementation "com.chenlb.mmseg4j:mmseg4j-analysis:1.8.6"

    implementation "org.jdom:jdom2:2.0.6"
    implementation "org.apache.lucene:lucene-analyzers:3.6.2"
    implementation "org.apache.lucene:lucene-smartcn:3.6.2"
    implementation "org.slf4j:slf4j-api:1.7.6"
}